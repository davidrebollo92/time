{"mappings":"AAAA,iBAAkB,SAAQ,IAAI;gBACf,IAAI,CAAC,EAAE,MAAM,GAAG,IAAI;IAOhC,OAAO;IAIP,GAAG;IAIH,WAAW;IAIX,KAAK;IAIL,IAAI;IAIJ,UAAU;IASV,GAAG,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,QAAQ,GAAG,OAAO;IAcrD,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,GAAG,QAAQ,GAAG,OAAO;IAgB1D,QAAQ,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IAO5B,OAAO,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IAO3B,cAAc,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IAOlC,aAAa,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM;IAOjC,SAAS,CAAC,SAAS,EAAE,IAAI,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;IAgB3F,IAAI,CAAC,IAAI,EAAE,IAAI,GAAG,MAAM,EAAE,IAAI,EAAE,SAAS,GAAG,MAAM,GAAG,QAAQ,GAAG,OAAO;IAuBvE,KAAK;IAIL,MAAM,CAAC,IAAI,EAAE,UAAU,GAAG,UAAU,GAAG,QAAQ,GAAG,QAAQ,EAAE,SAAS,CAAC,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG;CAwDxF","sources":["src/src/index.ts","src/index.ts"],"sourcesContent":[null,"export class Time extends Date {\n   constructor(date?: string | Date) {\n      if (date) {\n         if (typeof date == \"string\") super(new Date(date));\n         else super(date);\n      } else super(new Date());\n   }\n\n   isValid() {\n      return !isNaN(this.getTime());\n   }\n\n   day() {\n      return this.getDate();\n   }\n\n   daysInMonth() {\n      return new Date(this.year(), this.month(), 0).getDate();\n   }\n\n   month() {\n      return this.getMonth() + 1;\n   }\n\n   year() {\n      return this.getFullYear();\n   }\n\n   startOfDay() {\n      this.setHours(0);\n      this.setMinutes(0);\n      this.setSeconds(0);\n      this.setMilliseconds(0);\n\n      return this;\n   }\n\n   add(amount: number, unit: \"days\" | \"months\" | \"years\") {\n      switch (unit) {\n         case \"days\":\n            this.setDate(this.getDate() + amount);\n            return this;\n         case \"months\":\n            this.setMonth(this.getMonth() + amount);\n            return this;\n         case \"years\":\n            this.setFullYear(this.getFullYear() + amount);\n            return this;\n      }\n   }\n\n   subtract(amount: number, unit: \"days\" | \"months\" | \"years\") {\n      switch (unit) {\n         case \"days\":\n            this.setDate(this.getDate() - amount);\n            break;\n         case \"months\":\n            this.setMonth(this.getMonth() - amount);\n            break;\n         case \"years\":\n            this.setFullYear(this.getFullYear() - amount);\n            break;\n      }\n\n      return this;\n   }\n\n   isBefore(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      if (this < date) return true;\n      else return false;\n   }\n\n   isAfter(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      if (this > date) return true;\n      else return false;\n   }\n\n   isSameOrBefore(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      if (this <= date) return true;\n      else return false;\n   }\n\n   isSameOrAfter(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      if (this >= date) return true;\n      else return false;\n   }\n\n   isBetween(startDate: Time | string, endDate: Time | string, rule: \"()\" | \"(]\" | \"[)\" | \"[]\") {\n      if (typeof startDate == \"string\") startDate = new Time(startDate);\n      if (typeof endDate == \"string\") endDate = new Time(endDate);\n\n      switch (rule) {\n         case \"()\":\n            return this > startDate && this < endDate;\n         case \"(]\":\n            return this > startDate && this <= endDate;\n         case \"[)\":\n            return this >= startDate && this < endDate;\n         case \"[]\":\n            return this >= startDate && this <= endDate;\n      }\n   }\n\n   diff(date: Time | string, unit: \"minutes\" | \"days\" | \"months\" | \"years\") {\n      let diff;\n\n      if (typeof date == \"string\") date = new Time(date);\n\n      switch (unit) {\n         case \"minutes\":\n            diff = this.diffInMinutes(date);\n            break;\n         case \"days\":\n            diff = this.diffInDays(date);\n            break;\n         case \"months\":\n            diff = this.diffInMonths(date);\n            break;\n         case \"years\":\n            diff = this.diffInYears(date);\n            break;\n      }\n\n      return diff;\n   }\n\n   clone() {\n      return new Time(this);\n   }\n\n   format(rule: \"YYYYMMDD\" | \"DDMMYYYY\" | \"YYMMDD\" | \"DDMMYY\", separator?: \"\" | \"-\" | \"/\") {\n      if (!separator) separator = \"\";\n\n      const day = this.day() > 9 ? this.day().toString() : 0 + this.day().toString();\n      const month = this.month() > 9 ? this.month().toString() : 0 + this.month().toString();\n      const year = this.year().toString();\n\n      switch (rule) {\n         case \"YYYYMMDD\":\n            return year + separator + month + separator + day;\n         case \"DDMMYYYY\":\n            return day + separator + month + separator + year;\n         case \"YYMMDD\":\n            return year.substring(2) + separator + month + separator + day;\n         case \"DDMMYY\":\n            return day + separator + month + separator + year.substring(2);\n      }\n   }\n\n   private diffInMinutes(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      let diff = (this.getTime() - date.getTime()) / 1000;\n      diff /= 60;\n\n      return Math.round(diff);\n   }\n\n   private diffInDays(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n\n      const utc1 = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate());\n      const utc2 = Date.UTC(this.getFullYear(), this.getMonth(), this.getDate());\n\n      return Math.floor((utc2 - utc1) / _MS_PER_DAY);\n   }\n\n   private diffInMonths(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      let months;\n\n      months = (this.getFullYear() - date.getFullYear()) * 12;\n      months -= date.getMonth();\n      months += this.getMonth();\n\n      return months;\n   }\n\n   private diffInYears(date: Time | string) {\n      if (typeof date == \"string\") date = new Time(date);\n\n      return this.getFullYear() - date.getFullYear();\n   }\n}\n"],"names":[],"version":3,"file":"index.d.ts.map"}